"""create db

Revision ID: a38ea740cc83
Revises: 
Create Date: 2022-05-15 17:15:33.937166

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a38ea740cc83'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('ssn', sa.String(), nullable=True),
    sa.Column('hire_date', sa.DateTime(), nullable=True),
    sa.Column('filing_status', sa.String(), nullable=True),
    sa.Column('wage', sa.Float(), nullable=True),
    sa.Column('sick_leave_rate', sa.Float(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('update_ts', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employee_tax',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('federal_tax', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('state_tax', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('local_tax', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('federal_taxes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('year', sa.String(), nullable=False),
    sa.Column('tax_type', sa.String(), nullable=False),
    sa.Column('tax_rate', sa.Float(), nullable=False),
    sa.Column('tax_threshold', sa.Integer(), nullable=True),
    sa.Column('filing_status', sa.String(), nullable=True),
    sa.Column('annual_limit', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payroll',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('update_ts', sa.DateTime(), nullable=True),
    sa.Column('gross_pay', sa.Float(), nullable=True),
    sa.Column('net_pay', sa.Float(), nullable=True),
    sa.Column('income_tax', sa.Float(), nullable=True),
    sa.Column('medicare', sa.Float(), nullable=True),
    sa.Column('social_security', sa.Float(), nullable=True),
    sa.Column('state_taxes', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('employer_medicare', sa.Float(), nullable=True),
    sa.Column('employer_social_security', sa.Float(), nullable=True),
    sa.Column('employer_unemployment', sa.Float(), nullable=True),
    sa.Column('employer_state_taxes', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id', 'date')
    )
    op.create_table('sick_leave',
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('accrued_leave', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('date', 'id')
    )
    op.create_table('standard_deduction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('filing_status', sa.String(), nullable=False),
    sa.Column('deduction', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('state_taxes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('year', sa.String(), nullable=False),
    sa.Column('tax_type', sa.String(), nullable=False),
    sa.Column('tax_rate', sa.Float(), nullable=False),
    sa.Column('tax_threshold', sa.Integer(), nullable=True),
    sa.Column('filing_status', sa.String(), nullable=True),
    sa.Column('annual_limit', sa.Integer(), nullable=True),
    sa.Column('use_deduction', sa.BOOLEAN(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('timesheets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('update_ts', sa.DateTime(), nullable=True),
    sa.Column('hours', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id', 'date')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('timesheets')
    op.drop_table('state_taxes')
    op.drop_table('standard_deduction')
    op.drop_table('sick_leave')
    op.drop_table('payroll')
    op.drop_table('federal_taxes')
    op.drop_table('employee_tax')
    op.drop_table('employee')
    # ### end Alembic commands ###
